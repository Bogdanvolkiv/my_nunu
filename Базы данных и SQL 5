-- Задание 1: Создание таблицы и изменение данных

-- Создание таблицы EmployeeDetails
CREATE TABLE EmployeeDetails (
    EmployeeID INTEGER PRIMARY KEY,
    EmployeeName TEXT,
    Position TEXT,
    HireDate DATE,
    Salary NUMERIC
);

-- Добавление данных
INSERT INTO EmployeeDetails (EmployeeID, EmployeeName, Position, HireDate, Salary) 
VALUES (1, 'John Smith', 'Sales Manager', '2022-01-15', 55000);

INSERT INTO EmployeeDetails (EmployeeID, EmployeeName, Position, HireDate, Salary) 
VALUES (2, 'Jane Doe', 'Marketing Specialist', '2021-06-30', 48000);

INSERT INTO EmployeeDetails (EmployeeID, EmployeeName, Position, HireDate, Salary) 
VALUES (3, 'Emily Johnson', 'Software Engineer', '2023-03-22', 65000);

-- Задание 2: Создание представления

-- Создание представления HighValueOrders
CREATE VIEW HighValueOrders AS
SELECT
    o.OrderID,
    o.OrderDate,
    SUM(od.Quantity * p.Price) AS TotalAmount
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY o.OrderID, o.OrderDate
HAVING SUM(od.Quantity * p.Price) > 10000;

-- Задание 3: Удаление данных и таблиц

-- Удаление данных из EmployeeDetails, где Salary меньше 50000
DELETE FROM EmployeeDetails WHERE Salary < 50000;

-- Удаление таблицы EmployeeDetails
DROP TABLE EmployeeDetails;

-- Задание 4: Создание хранимой процедуры

-- Создание хранимой процедуры GetProductSales
CREATE PROCEDURE GetProductSales(IN p_ProductID INTEGER)
BEGIN
    SELECT
        o.OrderID,
        o.OrderDate,
        o.CustomerID
    FROM Orders o
    JOIN OrderDetails od ON o.OrderID = od.OrderID
    WHERE od.ProductID = p_ProductID;
END;
